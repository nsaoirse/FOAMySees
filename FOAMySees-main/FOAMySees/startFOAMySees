

if ! test -f ./caseSetup.sh; then
  echo "ERROR: FOAMySees Case files do not exist in the current working directory."
  echo "Please ensure you are in the proper folder before executing the 'startFOAMySees' command"
  exit 1
fi
###########################################################################################################################
###########################################################################################################################
					# LOAD MODULES IF NECESSARY
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################


###########################################################################################################################
###########################################################################################################################
					# BEGIN PROGRAM SETTINGS
#################################
# program defaults...
export FYS_inputFilesLocation="fromUser"
export FYS_OpenSeesPyModelFile="OpenSeesModel.py"
export FYS_Nprocessors=1
export FYS_OpenFOAMSolver="interFoam"
export FYS_isPartOfHydro="No"
export FYS_nameOfCoupledPatchOrSurfaceFile="interface"
export FYS_useExistingOpenFOAMCaseFolder=1
export FYS_ExistingOpenFOAMCase="Fluid"
export FYS_HydrojsonFile="none"
export FYS_numOpenSeesSubSteps=1
export FYS_numOpenFOAMSubSteps=1
export FYS_singlePhase="0"
export FYS_singlePhaseDensity="1.225"
export FYS_singlePhaseKinematicViscosity="1.48e-05"
export FYS_shmLocX="0.1"
export FYS_shmLocY="0.1"
export FYS_shmLocZ="0.1"

# you can change this
caseFolder="RunCase"
FYS_OpenFOAMFileHandler="uncollated" # 'collated' or 'uncollated'
Nprocessors=2
		
###########################################################################################################################
###########################################################################################################################

export whereWasScriptExecutedFrom=`pwd`

# export FYS_PATH=$FYS_PATH:$FOAMySeesSrcDir/FOAMySees
# export FYS_PATH=$FYS_PATH:$FOAMySeesSrcDir/config_helpers

# export PATH=$PATH:$FOAMySeesSrcDir:$FYS_PATH

echo $PATH
UserInput=0
# UserInput=0 #switch this to 0 to use the script with hard coded inputs (might be necessary to incorporate into a different tool such as HydroUQ)
writeCache=0
# don't modify the above
###########################################################################################################################
###########################################################################################################################
# don't change any of this unless you feel like debugging
parallel=1	

# this is a flag, which I don't use
solverroot="./"	

# where all the magic happens
Participant1="OpenFOAMCase"	

# the name of the openfoam case folder with which the structural analysis solution is coupled
Participant2="FOAMySeesCouplingDriver"	

# the name of the python script holding the coupling driver for the structural analysis solver
configfile="precice-config.xml"	
###########################################################################################################################
###########################################################################################################################
# name of the preCICE case configuration file (this is automatically generated for you, depending on your settings)
FYS_CouplingDataProjectionMesh="CouplingDataProjectionMesh.obj" 

# this is the name of the file which will be loaded into the coupling driver as the coupling data projection mesh -
FYS_makeCouplingDataProjectionMesh=1	

# the file can be generated automatically, using the name of the coupled patch specified above under nameOfCoupledPatchOrSurfaceFile
FYS_OpenFOAMCaseFolder="OpenFOAMCase" 
# this is the name of the folder within which the OpenFOAM case will be held
###########################################################################################################################
###########################################################################################################################


. $WM_PROJECT_DIR/bin/tools/RunFunctions    # Tutorial run functions

###########################################################################################################################
###########################################################################################################################


chmod u+x caseSetup.sh

source caseSetup.sh

###########################################################################################################################
###########################################################################################################################



# preparing the case folder
rm -rf ${caseFolder}
mkdir ${caseFolder}

###########################################################################################################################
###########################################################################################################################

echo $FYS_inputFilesLocation 
echo This is the input files location, copying from there

###########################################################################################################################
###########################################################################################################################

cd ${caseFolder}
echo "pass">userLoadApply.txt
echo "pass">userLoadRemove.txt
echo " ">extraImports.py
###########################################################################################################################
###########################################################################################################################

cp -r $FOAMySeesSrcDir/ProgramFiles/OpenFOAMCase . 
# cp -r $FOAMySeesSrcDir/ProgramFiles/FOAMySees/FOAMySeesFiles/fromUserDefaults/* .

###########################################################################################################################
###########################################################################################################################

cp -r ${whereWasScriptExecutedFrom}/${FYS_inputFilesLocation}/* .

###########################################################################################################################
###########################################################################################################################

mkdir ${FYS_OpenFOAMCaseFolder}

###########################################################################################################################
###########################################################################################################################

cp -r ${whereWasScriptExecutedFrom}/${FYS_ExistingOpenFOAMCase}/* ${FYS_OpenFOAMCaseFolder}

###########################################################################################################################
###########################################################################################################################

# configuring the case
echo these are the inputs to the configuration file
echo "FYS_nameOfCoupledPatchOrSurfaceFile ${FYS_nameOfCoupledPatchOrSurfaceFile} \n FYS_CouplingDataProjectionMesh ${FYS_CouplingDataProjectionMesh} \n FYS_makeCouplingDataProjectionMesh ${FYS_makeCouplingDataProjectionMesh} \n FYS_OpenSeesPyModelFile ${FYS_OpenSeesPyModelFile} \n FYS_OpenFOAMCaseFolder ${FYS_OpenFOAMCaseFolder} \n FYS_OpenFOAMSolver ${FYS_OpenFOAMSolver} \n FYS_Nprocessors ${FYS_Nprocessors} \n FYS_OpenFOAMFileHandler ${FYS_OpenFOAMFileHandler} \n FYS_useExistingOpenFOAMCaseFolder ${FYS_useExistingOpenFOAMCaseFolder} \n FYS_ExistingOpenFOAMCase ${FYS_ExistingOpenFOAMCase} \n FYS_numOpenSeesSubSteps ${FYS_numOpenSeesSubSteps} \n FYS_numOpenFOAMSubSteps ${FYS_numOpenFOAMSubSteps} \n FYS_isPartOfHydro ${FYS_isPartOfHydro} \n FYS_HydrojsonFile ${FYS_HydrojsonFile} \n FYS_shmLoc ${FYS_shmLocX} ${FYS_shmLocY} ${FYS_shmLocZ} \n single phase fluid simulation  ${FYS_singlePhase}"

###########################################################################################################################
###########################################################################################################################

python3 $FOAMySeesSrcDir/ProgramFiles/configureCoupledCase.py  ${FYS_nameOfCoupledPatchOrSurfaceFile} ${FYS_CouplingDataProjectionMesh} ${FYS_makeCouplingDataProjectionMesh} ${FYS_OpenSeesPyModelFile} ${FYS_OpenFOAMCaseFolder} ${FYS_OpenFOAMSolver} ${FYS_Nprocessors} ${FYS_OpenFOAMFileHandler} ${FYS_useExistingOpenFOAMCaseFolder} ${FYS_ExistingOpenFOAMCase} ${FYS_numOpenSeesSubSteps} ${FYS_numOpenFOAMSubSteps} ${FYS_isPartOfHydro} ${FYS_HydrojsonFile} ${FYS_shmLocX} ${FYS_shmLocY} ${FYS_shmLocZ} ${FYS_singlePhase} ${FYS_singlePhaseDensity} ${FYS_singlePhaseKinematicViscosity}

########################################################################################################
########################################################################################################
################### START COUPLED ANALYSIS BETWEEN OPENFOAM AND OPENSEES ###############################
########################################################################################################
########################################################################################################



# starting the OpenSees model preliminary analysis and waiting for coupling to initialize
echo "Starting FOAMySeesCouplingDriver..."
mpirun -np 1 python3 $FOAMySeesSrcDir/ProgramFiles/FOAMySeesCouplingDriver.py ${solverroot}${configfile} ${CouplingDataProjectionMesh} > fys_logs/FOAMySeesCouplingDriver.log & 
PIDParticipant2=$!        

# starting the OpenFOAM model
echo "Preparing the OpenFOAM Model..."
cd ${FYS_OpenFOAMCaseFolder}
        nproc=$(getNumberOfProcessors)
        Solver1=$(getApplication)    # solver
cd ..

surfaceMeshExtract -case ${FYS_OpenFOAMCaseFolder} -patches ${FYS_nameOfCoupledPatchOrSurfaceFile} -latestTime ../${FYS_CouplingDataProjectionMesh} > OpenFOAM_logs/surfaceFeatureExtract.log 2>&1
cp ${FYS_OpenFOAMCaseFolder}/${FYS_CouplingDataProjectionMesh} .
decomposePar -force -fileHandler ${FYS_OpenFOAMFileHandler} -case ${FYS_OpenFOAMCaseFolder} > OpenFOAM_logs/decomposePar.log 2>&1


if [ ${nproc} -ne 1 ]; then
	mpirun -np ${nproc} ${Solver1} -parallel -case ${FYS_OpenFOAMCaseFolder} > OpenFOAM_logs/${Participant1}.log &
else
	mpirun -np 1 ${Solver1} -case ${FYS_OpenFOAMCaseFolder} > OpenFOAM_logs/${Participant1}.log & 
fi
PIDParticipant1=$!

echo starting coupled analysis
########################################################################################################
########################################################################################################
################### END COUPLED ANALYSIS BETWEEN OPENFOAM AND OPENSEES ###############################
########################################################################################################
########################################################################################################

echo "">WorkInAndOut.log
# tailing the OpenSees output (OpenFOAM is verbose)
tail -f fys_logs/FOAMySeesCouplingDriver.log &
tail -f fys_logs/WorkInAndOut.log
echo analysis logs tailed
# waiting for input to cancel
while [ -e /proc/${PIDParticipant1} ]; do
    read -r  input
    if [ "$input" = "c" ]; then
        kill ${PIDParticipant1}
        kill ${PIDParticipant2}
        false
    fi
done

# if anything went wrong, do this
if [ $? -ne 0 ] || [ "$(grep -c -E "error:" ${Participant1}.log)" -ne 0 ] || [ "$(grep -c -E "error:" ${Participant2}.log)" -ne 0 ]; then
    echo ""
    echo "Something went wrong... See the log files for more."
    # Precaution
    kill ${PIDParticipant1}
    kill ${PIDParticipant2}
else # nothing went wrong, but double check to make sure
    echo ""
    echo "The simulation seems to be complete, but make sure by looking at the log files and output!"
    if [ $parallel -eq 1 ]; then
        echo "Reconstructing fields..."
        reconstructPar -case ${Participant1} >  OpenFOAM_logs/${Participant1}_reconstructPar.log 2>&1 & 
    fi
        wait 
        foamToVTK -case ${PIDParticipant1} >  OpenFOAM_logs/${Participant1}_foamToVTK.log 2>&1 & 
        wait
        
        python3 FSIPVD.py
        python3 FOAMySeesPlotter.py
        wait
        mkdir results
        cp -r SeesOutput results
        cp -r OpenSeesOutput.pvd results
        cp -r ${PIDParticipant1}/VTK results
        cp -r ${PIDParticipant1}/postProcessing results        
        zip -r ../results.zip results

fi

echo ""

cd ..

echo 'Analysis Complete, results stored in results.zip'

